# 파일 무시하기
# .o나 .a ~로 끝나는 파일들은 보통 텍스트 편집기에서 임시파일로 사용하는 파일이름이다.
# .o와 .a는 각각 빌드 시스템이 만들어내는 오브젝트와 아카이브 파일이고,
# ~로 끝나는 파일은 Eamacs나 VI 같은 텍스트 편집기가 임시로 만들어내는 파일이다.


# gitignore 규칙
# 아무것도 없는 라인이나 #로 시작하는 라인은 무시한다.
# 표준 Glob 패턴을 사용한다. 이는 프로젝트 전체에 적용된다.
# 슬래스(/)로 시작하면 하위 디렉토리에 적용되지 않는다.
# 디렉터리는 슬레시(/)를 끝에 사용하는 것으로 표현한다.
# 느낌표(!)로 시작하는 패턴의 파일은 무시하지 않는다.

# Glob 패턴은 정규표현식을 단순하게 만든 것으로 생각하면 되고 보통
# 쉘에서 많이 사용한다. 아스터리스크(*)는 문자가 하나도 없거나 하나
# 이상을 의미하고, [abc]는 대괄호 안에 있는 문자 중 하나를 의미한다.
# 그러니까 이 경우에는 물음표(?)는 문자 하나를 말하고, [0-9]처럼 중괄호
# 안의 캐릭터 사이에 하이픈(-)을 사용하면 그 캐릭터 사이에 있는 문자 하나를 말한다.
# 아스터리스크 2개를 사용하면 하위 디렉터리까지 지정할 수 있다. a/**/z 패턴은
# a/z, a/b/z/, a/b/c/z 디렉터리에 사용할 수 있다.\

#확장자가 .a인 파일 무시
*.a

# 윗 라인에서 확장자가 .a인 파일은 무시하게 했지만 lib.a는 무시하지 않음
!lib.a

# 현재 티렉터리에 있는 TODO파일은 무시하고 subdir/TODO처럼 하위 디렉터리에 있는 파일은 무시하지 않음
/TODO

# build/ 디렉터리에 있는 모든 파일은 무시
build/

# doc/notes.txt 파일은 무시하고 doc/server/arch.txt 파일은 무시하지 않음
doc/*.txt

#doc 디렉터리 아래의 모든 .pdf 파일을 무시
doc/**/.pdf


